%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 95 368 265
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%%DocumentFonts:Courier
%******************************************************************************
%
% The preview image should preceed this file if a preview is being generated.
%
% This should be the first line: %!PS-Adobe-2.0 EPSF-1.2
% There should also be a BBox:   %%BoundingBox:0 0 300 300
%
% Cadence Design Systems -- Supports Both Level 1 and Level 2 Printers
%
% EPS Prologue -- Version 97B (aka 9702)
%
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
/gis  {
  0 setgray
  mark
  save
  newpath

  72 resolution div
  dup
  scale

  /stippleArray 10 array def
    stippleArray
     dup    0  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
	        08080404020201018080404020201010> put
	    9  <08081414222241418080414122221414
		08081414222241418080414122221414> put



  /newFont 10 dict def
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
     /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put

    /BuildChar {
        /char exch def
        /fontdict exch def
	/charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 6 dict def
  xformdict /xformmtrx matrix put

  /rt 0 def
  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet 0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

  gsave

  } def

/cdsLevel2 /languagelevel where {pop languagelevel} {1} ifelse 2 ge def

/cdsColor cdsLevel2 not {
                          false
                          /colorimage where {pop pop true} if
                        } {
	                  true
                        } ifelse
def

/gfs  {
    grestore
    showpage
    restore
    cleartomark
  } def
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def

  } bind def
/rotp  {
  /rt 90 def
  grestore
} def
/clwin  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    rt 90 eq
      {
        pageWidth 0 translate
        rt rotate
	/rt 0 def
	gsave
      } if

    grestore
    gsave
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    clip
    newpath
} def
/bblineto {
  dup dup   /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} def
/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} def
/ellipse
  { ellipsedict begin
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    /savematrix mtrx currentmatrix def
    x y translate
    xrad yrad scale
    0 0 1 startangle endangle arc
    savematrix setmatrix
    end
  } def
/dls  {
  gsave
  newpath
  moveto
  rlineto
  setLineColor
  stroke
  grestore
} def
/dlt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dslt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dlv  {
  rlineto
} def
/dle  {
  stroke
  grestore
} def
/mps {
  newpath
  moveto
} def
/dbu  {
    setLineColor
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } def
/dbf  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    gsave
      newpath
      x1 y1 bbmoveto
      x2 y1 bblineto
      x2 y2 bblineto
      x1 y2 bblineto
      closepath
      clip fillpath
    grestore
  } def

/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
      newpath
      x1 y1 moveto
      x2 y1 lineto
      x2 y2 lineto
      x1 y2 lineto
      closepath
      gsave
      setFillColor
      fill grestore
      setLineColor stroke

} def
/dpb { gsave
      newpath bbmoveto
} def
/dpu  {
        closepath
        setLineColor
        stroke
      grestore
} def
/dpf  {
       closepath
       clip fillpath
     grestore
} def
/dps  {
       closepath
       setFillColor
       fill grestore
       setLineColor stroke
} def
/dpv  {
    bblineto
} def
/dcu  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setLineColor
      stroke
    grestore
} def
/dcf  {
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def
    gsave
      newpath
      x y radius radius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dcs  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setFillColor
      fill
    grestore
    setLineColor stroke
  } def
/delu  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
      x y xradius yradius 0 360 ellipse
      gsave
      setFillColor
      stroke
    grestore
  } def
/delf  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dels  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      setFillColor fill
    grestore
    setLineColor stroke
} def
/dau  { gsave
          newpath ellipse
          setLineColor
          stroke
        grestore
} def
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
} def

/lpb    {
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
} def

/lpon  {
    /oncount exch def
    pop
    oncount
} def

/lpoff  {
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
} def

/lpe  {
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth setlinewidth
} def

/sls    { pop } def

/ssls  { [] 0 setdash
          1 setlinewidth
} def
/fillpath  {
    setFillColor
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop
    hatchSet 1 eq {setLineColor stroke} if
} def

/fds  { pop /currchar 30 def} def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } def
/fde  {
    pop
  } def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } def

  /setLineColor {
    cdsLevel2 cdsColor or {
      lineRed    1000 div
      lineGreen  1000 div
      lineBlue   1000 div
      setrgbcolor } if
  } def

  /setFillColor {
    cdsLevel2 cdsColor or {
      fillRed    1000 div
      fillGreen  1000 div
      fillBlue   1000 div
      setrgbcolor }
      { 0 setgray } ifelse
  } def

  /slc {
    /lineBlue  exch def
    /lineGreen exch def
    /lineRed   exch def
    /color 1 def
    lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
      /lineBlue  0 def
      /lineGreen 0 def
      /lineRed   0 def
    } if} if} if
  } def

  /sfc {
    /fillBlue  exch def
    /fillGreen exch def
    /fillRed   exch def
    /color 1 def
    fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
      /fillBlue  0 def
      /fillGreen 0 def
      /fillRed   0 def
    } if} if} if
  } def

%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%
%
/rfe
{
/width exch def
5 1 roll
moveto

xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
% What I need to do here is to validate <ht>.  <ht> can not be 0.  If it is 0
% then make it 1.  To do this I will need to use the roll operation and exch
% and maybe dup.  The algorithm looks like this:
% Roll stack to make it look like : <rotate> <mirror> <ht>
% duplicate <ht> so I can test it.
% If <ht> is equal to 0 then
% exchange 1 for <ht>
% In any case roll stack to make it look like: <ht> <rotate> <mirror>
% qed.
%
	3 -1 roll		% <rotate> <mirror> <ht>
	dup 0 eq
	{
		1 exch pop	% <rotate> <mirror> <ht=1>
	}
	if
	3 1 roll		% <ht> <rotate> <mirror>

	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/tasz 60 def
	/taln 59 def

	/ta tasz array def
	/cta ta def
	/tc 0 def
	/sa tasz array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
	% Since restricting one dimension and not the other is not supported
	% if one dimension is turned off then ensure that both dimensions
	% are turned off (a value of 0 means no restriction)
	rht 0 eq rw 0 eq or
	{
		/rht 0 def
		/rw 0 def
	}
	if
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc tasz lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc taln gt tc tasz mod 0 eq and
	{
		cta /cta tasz array dup def put
	} if

	tc tasz mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			tasz mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup 0 eq		% Test if height is 0
		{			% change to 1 if it is
                	1 exch pop	% <rot> <mir> <x> <y> <fn> <1>
		}
		if
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			cta exch tasz mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%*****************************
%
% End of Cadence eps.prologue
%
%*****************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
 1500 1500 300 pap
%%Page: cds 1
gis
0 397 1499 1101 clwin
0 397 1499 1102 clwin
0 397 1499 1102 clwin
0 397 1500 1102 clwin
0 397 1499 1102 clwin
ssls
9 0 1053 514 dls
1072 514 dpb
1068 519 dpv
1063 516 dpv
1063 512 dpv
1068 509 dpv
dpu
0 36 1072 496 dls
0 36 1078 496 dls
1099 538 dlt
-13 -6 dlv
13 -6 dlv
dle
24 0 1078 514 dls
1078 532 dlt
24 0 dlv
0 19 dlv
dle
1078 496 dlt
24 0 dlv
0 -19 dlv
dle
19 0 294 514 dls
0 36 313 496 dls
0 36 319 496 dls
319 496 dlt
24 0 dlv
0 -19 dlv
dle
24 0 319 514 dls
319 532 dlt
24 0 dlv
0 19 dlv
dle
331 502 dlt
12 -6 dlv
-12 -6 dlv
dle
-19 0 711 514 dls
0 36 692 496 dls
0 36 686 496 dls
686 496 dlt
-24 0 dlv
0 -19 dlv
dle
-24 0 686 514 dls
686 532 dlt
-24 0 dlv
0 19 dlv
dle
674 502 dlt
-12 -6 dlv
12 -6 dlv
dle
19 0 857 514 dls
0 36 876 496 dls
0 36 882 496 dls
882 496 dlt
24 0 dlv
0 -19 dlv
dle
24 0 882 514 dls
882 532 dlt
24 0 dlv
0 19 dlv
dle
894 502 dlt
12 -6 dlv
-12 -6 dlv
dle
1298 477 dlt
0 15 dlv
-12 4 dlv
24 7 dlv
-24 7 dlv
24 8 dlv
-24 7 dlv
24 7 dlv
-12 4 dlv
0 15 dlv
dle
19 0 294 685 dls
0 37 313 667 dls
0 37 319 667 dls
319 667 dlt
24 0 dlv
0 -18 dlv
dle
24 0 319 685 dls
319 704 dlt
24 0 dlv
0 18 dlv
dle
331 673 dlt
12 -6 dlv
-12 -6 dlv
dle
-19 0 711 685 dls
0 37 692 667 dls
0 37 686 667 dls
686 667 dlt
-24 0 dlv
0 -18 dlv
dle
-24 0 686 685 dls
686 704 dlt
-24 0 dlv
0 18 dlv
dle
674 673 dlt
-12 -6 dlv
12 -6 dlv
dle
19 0 857 685 dls
0 37 876 667 dls
0 37 882 667 dls
882 667 dlt
24 0 dlv
0 -18 dlv
dle
24 0 882 685 dls
882 704 dlt
24 0 dlv
0 18 dlv
dle
894 673 dlt
12 -6 dlv
-12 -6 dlv
dle
1298 673 dlt
0 15 dlv
-12 3 dlv
24 8 dlv
-24 7 dlv
24 8 dlv
-24 7 dlv
24 7 dlv
-12 4 dlv
0 15 dlv
dle
9 0 857 857 dls
876 857 dpb
872 862 dpv
867 859 dpv
867 854 dpv
872 852 dpv
dpu
0 37 876 838 dls
0 37 882 838 dls
903 881 dlt
-12 -6 dlv
12 -6 dlv
dle
24 0 882 857 dls
882 875 dlt
24 0 dlv
0 18 dlv
dle
882 838 dlt
24 0 dlv
0 -18 dlv
dle
-9 0 711 857 dls
702 857 dpb
698 862 dpv
693 859 dpv
693 854 dpv
698 852 dpv
dpu
0 37 692 838 dls
0 37 686 838 dls
665 881 dlt
13 -6 dlv
-13 -6 dlv
dle
-24 0 686 857 dls
686 875 dlt
-24 0 dlv
0 18 dlv
dle
686 838 dlt
-24 0 dlv
0 -18 dlv
dle
18 0 172 857 dls
0 37 190 838 dls
0 37 197 838 dls
197 838 dlt
24 0 dlv
0 -18 dlv
dle
24 0 197 857 dls
197 875 dlt
24 0 dlv
0 18 dlv
dle
209 844 dlt
12 -6 dlv
-12 -6 dlv
dle
-19 0 515 857 dls
0 37 496 838 dls
0 37 490 838 dls
490 838 dlt
-24 0 dlv
0 -18 dlv
dle
-24 0 490 857 dls
490 875 dlt
-24 0 dlv
0 18 dlv
dle
478 844 dlt
-12 -6 dlv
12 -6 dlv
dle
9 0 1249 906 dls
1268 906 dpb
1264 911 dpv
1259 908 dpv
1259 903 dpv
1264 901 dpv
dpu
0 37 1268 887 dls
0 37 1274 887 dls
1294 930 dlt
-12 -6 dlv
12 -6 dlv
dle
24 0 1274 906 dls
1274 924 dlt
24 0 dlv
0 18 dlv
dle
1274 887 dlt
24 0 dlv
0 -18 dlv
dle
9 0 1053 1028 dls
1072 1028 dpb
1068 1033 dpv
1063 1031 dpv
1063 1026 dpv
1068 1023 dpv
dpu
0 36 1072 1010 dls
0 36 1078 1010 dls
1099 1053 dlt
-13 -7 dlv
13 -6 dlv
dle
24 0 1078 1028 dls
1078 1046 dlt
24 0 dlv
0 19 dlv
dle
1078 1010 dlt
24 0 dlv
0 -19 dlv
dle
9 0 857 1028 dls
876 1028 dpb
872 1033 dpv
867 1031 dpv
867 1026 dpv
872 1023 dpv
dpu
0 36 876 1010 dls
0 36 882 1010 dls
903 1053 dlt
-12 -7 dlv
12 -6 dlv
dle
24 0 882 1028 dls
882 1046 dlt
24 0 dlv
0 19 dlv
dle
882 1010 dlt
24 0 dlv
0 -19 dlv
dle
-9 0 711 1028 dls
702 1028 dpb
698 1033 dpv
693 1031 dpv
693 1026 dpv
698 1023 dpv
dpu
0 36 692 1010 dls
0 36 686 1010 dls
665 1053 dlt
13 -7 dlv
-13 -6 dlv
dle
-24 0 686 1028 dls
686 1046 dlt
-24 0 dlv
0 19 dlv
dle
686 1010 dlt
-24 0 dlv
0 -19 dlv
dle
0 404 148 453 dls
24 0 148 857 dls
0 74 221 893 dls
0 37 221 820 dls
171 0 99 624 dls
171 0 99 575 dls
0 61 270 624 dls
0 61 270 514 dls
276 624 dpb
274 629 dpv
268 629 dpv
264 624 dpv
266 619 dpv
272 619 dpv
dps
276 575 dpb
274 580 dpv
268 580 dpv
264 575 dpv
266 570 dpv
272 570 dpv
dps
24 0 270 685 dls
24 0 270 514 dls
269 0 74 428 dls
122 0 221 820 dls
0 98 343 722 dls
0 98 343 551 dls
0 49 343 428 dls
0 36 343 649 dls
0 37 343 477 dls
350 820 dpb
347 825 dpv
341 825 dpv
337 820 dpv
340 815 dpv
346 815 dpv
dps
350 428 dpb
347 433 dpv
341 433 dpv
337 428 dpv
340 423 dpv
346 423 dpv
dps
123 0 343 820 dls
0 37 466 820 dls
0 25 466 893 dls
440 0 99 942 dls
24 0 515 857 dls
0 85 539 857 dls
551 0 111 1089 dls
441 0 221 967 dls
319 0 343 428 dls
0 98 662 551 dls
0 74 662 893 dls
0 74 662 722 dls
0 49 662 428 dls
0 37 662 1028 dls
0 36 662 857 dls
0 36 662 649 dls
0 37 662 477 dls
0 24 662 1065 dls
0 24 662 967 dls
0 24 662 796 dls
668 967 dpb
665 972 dpv
659 972 dpv
656 967 dpv
658 962 dpv
664 962 dpv
dps
668 796 dpb
665 800 dpv
659 800 dpv
656 796 dpv
658 791 dpv
664 791 dpv
dps
668 428 dpb
665 433 dpv
659 433 dpv
656 428 dpv
658 423 dpv
664 423 dpv
dps
668 1089 dpb
665 1094 dpv
659 1094 dpv
656 1089 dpv
658 1084 dpv
664 1084 dpv
dps
490 0 270 624 dls
490 0 270 575 dls
98 0 662 796 dls
49 0 711 1028 dls
49 0 711 685 dls
49 0 711 514 dls
0 171 760 796 dls
0 61 760 967 dls
0 61 760 624 dls
0 61 760 514 dls
766 1028 dpb
763 1033 dpv
757 1033 dpv
753 1028 dpv
756 1023 dpv
762 1023 dpv
dps
766 967 dpb
763 972 dpv
757 972 dpv
753 967 dpv
756 962 dpv
762 962 dpv
dps
766 685 dpb
763 690 dpv
757 690 dpv
753 685 dpv
756 680 dpv
762 680 dpv
dps
766 514 dpb
763 519 dpv
757 519 dpv
753 514 dpv
756 509 dpv
762 509 dpv
dps
710 0 99 771 dls
98 0 711 857 dls
0 86 809 771 dls
815 857 dpb
812 862 dpv
806 862 dpv
802 857 dpv
805 852 dpv
811 852 dpv
dps
97 0 760 1028 dls
97 0 760 685 dls
97 0 760 514 dls
48 0 809 857 dls
440 0 466 918 dls
244 0 662 1089 dls
244 0 662 428 dls
0 98 906 551 dls
0 73 906 918 dls
0 49 906 771 dls
0 49 906 722 dls
0 49 906 428 dls
0 37 906 1028 dls
0 36 906 857 dls
0 36 906 649 dls
0 37 906 477 dls
0 24 906 1065 dls
0 25 906 893 dls
913 1089 dpb
910 1094 dpv
904 1094 dpv
900 1089 dpv
903 1084 dpv
909 1084 dpv
dps
913 918 dpb
910 923 dpv
904 923 dpv
900 918 dpv
903 913 dpv
909 913 dpv
dps
913 771 dpb
910 776 dpv
904 776 dpv
900 771 dpv
903 766 dpv
909 766 dpv
dps
913 428 dpb
910 433 dpv
904 433 dpv
900 428 dpv
903 423 dpv
909 423 dpv
dps
269 0 760 967 dls
123 0 906 771 dls
0 257 1029 514 dls
0 61 1029 967 dls
24 0 1029 1028 dls
24 0 1029 514 dls
196 0 906 1089 dls
196 0 906 428 dls
0 355 1102 551 dls
0 85 1102 906 dls
0 49 1102 428 dls
0 37 1102 1028 dls
0 37 1102 514 dls
0 24 1102 1065 dls
1108 1089 dpb
1106 1094 dpv
1100 1094 dpv
1096 1089 dpv
1099 1084 dpv
1105 1084 dpv
dps
1108 906 dpb
1106 911 dpv
1100 911 dpv
1096 906 dpv
1099 901 dpv
1105 901 dpv
dps
1108 428 dpb
1106 433 dpv
1100 433 dpv
1096 428 dpv
1099 423 dpv
1105 423 dpv
dps
1077 0 148 453 dls
0 147 1225 453 dls
147 0 1102 906 dls
196 0 1102 1089 dls
196 0 1102 428 dls
73 0 1225 600 dls
0 147 1298 942 dls
0 73 1298 796 dls
0 73 1298 600 dls
0 49 1298 747 dls
0 49 1298 428 dls
0 49 1298 551 dls
0 36 1298 906 dls
1304 796 dpb
1302 800 dpv
1296 800 dpv
1292 796 dpv
1294 791 dpv
1301 791 dpv
dps
1304 600 dpb
1302 605 dpv
1296 605 dpv
1292 600 dpv
1294 595 dpv
1301 595 dpv
dps
123 0 1298 796 dls
1324 816 dlt
4 -12 dlv
5 12 dlv
dle
1336 804 dlt
0 12 dlv
5 0 dlv
2 0 dlv
1 -1 dlv
0 -1 dlv
0 -1 dlv
0 -1 dlv
-1 -1 dlv
-2 -1 dlv
-5 0 dlv
dle
4 -6 1340 810 dls
1356 816 dlt
-8 0 dlv
0 -12 dlv
8 0 dlv
dle
5 0 1348 810 dls
1368 813 dlt
-1 2 dlv
-1 1 dlv
-1 0 dlv
-3 0 dlv
-1 0 dlv
-1 -1 dlv
-1 -2 dlv
0 -1 dlv
0 -3 dlv
0 -2 dlv
1 -1 dlv
1 -1 dlv
1 -1 dlv
3 0 dlv
1 1 dlv
1 1 dlv
1 1 dlv
0 2 dlv
-3 0 dlv
dle
1160 926 dlt
4 -12 dlv
5 12 dlv
dle
1180 924 dlt
0 1 dlv
-2 1 dlv
-1 0 dlv
-2 0 dlv
-1 0 dlv
-1 -1 dlv
-1 -1 dlv
-1 -2 dlv
0 -3 dlv
1 -2 dlv
1 -1 dlv
1 -1 dlv
1 -1 dlv
2 0 dlv
1 1 dlv
2 1 dlv
0 1 dlv
0 2 dlv
-3 0 dlv
dle
9 0 1183 913 dls
1196 914 dlt
0 12 dlv
5 0 dlv
2 0 dlv
0 -1 dlv
1 -1 dlv
0 -2 dlv
-1 -1 dlv
-2 -1 dlv
-5 0 dlv
dle
1206 914 dlt
5 12 dlv
5 -12 dlv
dle
6 0 1208 918 dls
1227 925 dlt
-1 1 dlv
-2 0 dlv
-2 0 dlv
-2 0 dlv
-1 -1 dlv
0 -1 dlv
0 -2 dlv
1 0 dlv
1 -1 dlv
3 -1 dlv
2 -1 dlv
1 -1 dlv
0 -2 dlv
-1 -1 dlv
-2 -1 dlv
-2 0 dlv
-2 1 dlv
-1 1 dlv
dle
1238 925 dlt
-1 1 dlv
-1 0 dlv
-3 0 dlv
-2 0 dlv
-1 -1 dlv
0 -1 dlv
1 -2 dlv
2 -1 dlv
3 -1 dlv
1 -1 dlv
1 0 dlv
0 -1 dlv
0 -2 dlv
-1 -1 dlv
-1 -1 dlv
-3 0 dlv
-2 1 dlv
-1 1 dlv
dle
1206 657 dlt
4 -12 dlv
5 12 dlv
dle
1218 645 dlt
0 12 dlv
4 0 dlv
2 0 dlv
1 -2 dlv
0 -1 dlv
1 -1 dlv
0 -3 dlv
-1 -2 dlv
0 -1 dlv
-1 -1 dlv
-2 -1 dlv
-4 0 dlv
dle
2 0 1229 657 dls
0 -12 1230 657 dls
2 0 1229 645 dls
1233 657 dlt
5 -12 dlv
4 12 dlv
dle
111 428 dpb
100 417 dpv
85 417 dpv
74 428 dpv
85 439 dpv
100 439 dpv
dps
1048 509 1058 519 dbs
1097 472 1107 482 dbs
1097 509 1107 519 dbs
1097 546 1107 556 dbs
290 509 299 519 dbs
339 546 348 556 dbs
339 509 348 519 dbs
339 472 348 482 dbs
706 509 716 519 dbs
657 546 667 556 dbs
657 509 667 519 dbs
657 472 667 482 dbs
853 509 862 519 dbs
902 546 911 556 dbs
902 509 911 519 dbs
902 472 911 482 dbs
1293 482 dpb
1303 482 dpv
1303 472 dpv
1293 472 dpv
dps
1293 556 dpb
1303 556 dpv
1303 546 dpv
1293 546 dpv
dps
74 564 dpb
74 586 dpv
88 586 dpv
99 575 dpv
88 564 dpv
dps
74 613 dpb
74 635 dpv
88 635 dpv
99 624 dpv
88 613 dpv
dps
290 680 299 690 dbs
339 717 348 727 dbs
339 680 348 690 dbs
339 644 348 654 dbs
706 680 716 690 dbs
657 717 667 727 dbs
657 680 667 690 dbs
657 644 667 654 dbs
853 680 862 690 dbs
902 717 911 727 dbs
902 680 911 690 dbs
902 644 911 654 dbs
1293 678 dpb
1303 678 dpv
1303 668 dpv
1293 668 dpv
dps
1293 751 dpb
1303 751 dpv
1303 742 dpv
1293 742 dpv
dps
74 760 dpb
74 782 dpv
88 782 dpv
99 771 dpv
88 760 dpv
dps
1421 784 dpb
1421 807 dpv
1434 807 dpv
1445 796 dpv
1434 784 dpv
dps
853 852 862 862 dbs
902 815 911 825 dbs
902 852 911 862 dbs
902 889 911 898 dbs
706 852 716 862 dbs
657 815 667 825 dbs
657 852 667 862 dbs
657 889 667 898 dbs
167 852 177 862 dbs
216 889 226 898 dbs
216 852 226 862 dbs
216 815 226 825 dbs
510 852 520 862 dbs
461 889 471 898 dbs
461 852 471 862 dbs
461 815 471 825 dbs
74 931 dpb
74 953 dpv
88 953 dpv
99 942 dpv
88 931 dpv
dps
1244 901 1254 911 dbs
1293 864 1303 874 dbs
1293 901 1303 911 dbs
1293 937 1303 947 dbs
1048 1023 1058 1033 dbs
1097 986 1107 996 dbs
1097 1023 1107 1033 dbs
1097 1060 1107 1070 dbs
853 1023 862 1033 dbs
902 986 911 996 dbs
902 1023 911 1033 dbs
902 1060 911 1070 dbs
706 1023 716 1033 dbs
657 986 667 996 dbs
657 1023 667 1033 dbs
657 1060 667 1070 dbs
111 1089 dpb
100 1078 dpv
85 1078 dpv
74 1089 dpv
85 1100 dpv
100 1100 dpv
dps
41 432 dlt
-1 1 dlv
-1 1 dlv
-1 0 dlv
-3 0 dlv
-1 0 dlv
-1 -1 dlv
-1 -1 dlv
0 -2 dlv
0 -3 dlv
0 -2 dlv
1 -1 dlv
1 -1 dlv
1 -1 dlv
3 0 dlv
1 1 dlv
1 1 dlv
1 1 dlv
0 2 dlv
-3 0 dlv
dle
45 422 dlt
0 12 dlv
8 -12 dlv
0 12 dlv
dle
57 422 dlt
0 12 dlv
5 0 dlv
1 0 dlv
1 -1 dlv
1 -1 dlv
1 -2 dlv
0 -3 dlv
-1 -2 dlv
-1 -1 dlv
-1 -1 dlv
-1 -1 dlv
-5 0 dlv
dle
0 581 dlt
5 -12 dlv
4 12 dlv
dle
12 575 dlt
6 0 dlv
1 0 dlv
1 -1 dlv
0 -1 dlv
0 -2 dlv
0 -1 dlv
-1 0 dlv
-1 -1 dlv
-6 0 dlv
0 12 dlv
6 0 dlv
1 0 dlv
1 -1 dlv
0 -1 dlv
0 -1 dlv
0 -1 dlv
-1 -1 dlv
-1 -1 dlv
dle
3 0 23 581 dls
0 -12 25 581 dls
3 0 23 569 dls
27 569 dlt
5 12 dlv
5 -12 dlv
dle
6 0 29 573 dls
48 580 dlt
-1 1 dlv
-2 0 dlv
-2 0 dlv
-2 0 dlv
-1 -1 dlv
0 -2 dlv
0 -1 dlv
1 0 dlv
1 -1 dlv
4 -1 dlv
1 -1 dlv
1 -1 dlv
0 -2 dlv
-1 -1 dlv
-2 -1 dlv
-2 0 dlv
-2 1 dlv
-1 1 dlv
dle
60 573 dlt
-9 0 dlv
6 8 dlv
0 -12 dlv
dle
0 630 dlt
5 -12 dlv
4 12 dlv
dle
12 624 dlt
6 0 dlv
1 0 dlv
1 -1 dlv
0 -1 dlv
0 -2 dlv
0 -1 dlv
-1 0 dlv
-1 -1 dlv
-6 0 dlv
0 12 dlv
6 0 dlv
1 0 dlv
1 -1 dlv
0 -1 dlv
0 -1 dlv
0 -1 dlv
-1 -1 dlv
-1 -1 dlv
dle
3 0 23 630 dls
0 -12 25 630 dls
3 0 23 618 dls
27 618 dlt
5 12 dlv
5 -12 dlv
dle
6 0 29 622 dls
48 629 dlt
-1 1 dlv
-2 0 dlv
-2 0 dlv
-2 0 dlv
-1 -1 dlv
0 -2 dlv
0 -1 dlv
1 0 dlv
1 -1 dlv
4 -1 dlv
1 -1 dlv
1 -1 dlv
0 -2 dlv
-1 -1 dlv
-2 -1 dlv
-2 0 dlv
-2 1 dlv
-1 1 dlv
dle
53 630 dlt
6 0 dlv
-4 -4 dlv
2 0 dlv
1 -1 dlv
1 -1 dlv
1 -1 dlv
0 -1 dlv
-1 -2 dlv
-1 -1 dlv
-2 -1 dlv
-2 0 dlv
-1 1 dlv
-1 0 dlv
-1 1 dlv
dle
0 777 dlt
5 -12 dlv
4 12 dlv
dle
12 771 dlt
6 0 dlv
1 0 dlv
1 -1 dlv
0 -1 dlv
0 -2 dlv
0 -1 dlv
-1 -1 dlv
-1 0 dlv
-6 0 dlv
0 12 dlv
6 0 dlv
1 0 dlv
1 -1 dlv
0 -1 dlv
0 -1 dlv
0 -2 dlv
-1 0 dlv
-1 -1 dlv
dle
3 0 23 777 dls
0 -12 25 777 dls
3 0 23 765 dls
27 765 dlt
5 12 dlv
5 -12 dlv
dle
6 0 29 769 dls
48 775 dlt
-1 2 dlv
-2 0 dlv
-2 0 dlv
-2 0 dlv
-1 -2 dlv
0 -1 dlv
0 -1 dlv
1 -1 dlv
1 0 dlv
4 -1 dlv
1 -1 dlv
1 -2 dlv
0 -1 dlv
-1 -2 dlv
-2 0 dlv
-2 0 dlv
-2 0 dlv
-1 2 dlv
dle
52 774 dlt
0 1 dlv
1 1 dlv
0 1 dlv
1 0 dlv
3 0 dlv
1 0 dlv
0 -1 dlv
1 -1 dlv
0 -1 dlv
-1 -2 dlv
-1 -1 dlv
-6 -6 dlv
9 0 dlv
dle
1452 802 dlt
4 -13 dlv
5 13 dlv
dle
1464 789 dlt
0 13 dlv
5 0 dlv
2 -1 dlv
1 -1 dlv
0 -1 dlv
0 -1 dlv
0 -1 dlv
-1 -1 dlv
-2 0 dlv
-5 0 dlv
dle
4 -7 1468 796 dls
1484 802 dlt
-8 0 dlv
0 -13 dlv
8 0 dlv
dle
5 0 1476 796 dls
1495 799 dlt
0 1 dlv
-1 1 dlv
-2 1 dlv
-2 0 dlv
-1 -1 dlv
-1 -1 dlv
-1 -1 dlv
0 -2 dlv
0 -3 dlv
0 -2 dlv
1 -1 dlv
1 -1 dlv
1 -1 dlv
2 0 dlv
2 1 dlv
1 1 dlv
0 1 dlv
0 2 dlv
-3 0 dlv
dle
17 949 dlt
5 -13 dlv
5 13 dlv
dle
29 936 dlt
0 13 dlv
6 0 dlv
1 -1 dlv
1 -1 dlv
1 -1 dlv
0 -1 dlv
-1 -1 dlv
-1 -1 dlv
-1 0 dlv
-6 0 dlv
dle
4 -7 34 943 dls
49 949 dlt
-7 0 dlv
0 -13 dlv
7 0 dlv
dle
4 0 42 943 dls
53 936 dlt
0 13 dlv
7 0 dlv
dle
4 0 53 943 dls
21 1095 dlt
5 -12 dlv
4 12 dlv
dle
33 1083 dlt
0 12 dlv
5 0 dlv
2 0 dlv
1 -1 dlv
0 -1 dlv
0 -1 dlv
0 -1 dlv
-1 -1 dlv
-2 0 dlv
-5 0 dlv
dle
4 -7 37 1090 dls
53 1095 dlt
-8 0 dlv
0 -12 dlv
8 0 dlv
dle
5 0 45 1090 dls
65 1092 dlt
-1 2 dlv
-1 1 dlv
-1 0 dlv
-3 0 dlv
-1 0 dlv
-1 -1 dlv
-1 -2 dlv
0 -1 dlv
0 -3 dlv
0 -2 dlv
1 -1 dlv
1 -1 dlv
1 -1 dlv
3 0 dlv
1 1 dlv
1 1 dlv
1 1 dlv
dle
1115 556 dlt
0 9 dlv
4 -9 dlv
4 9 dlv
0 -9 dlv
dle
1127 564 dlt
1 0 dlv
2 1 dlv
0 -9 dlv
dle
1141 559 dlt
-7 0 dlv
4 6 dlv
0 -9 dlv
dle
358 557 dlt
0 10 dlv
3 -10 dlv
4 10 dlv
0 -10 dlv
dle
370 565 dlt
1 0 dlv
1 2 dlv
0 -10 dlv
dle
379 567 dlt
-1 -1 dlv
-1 -1 dlv
-1 -3 dlv
0 -1 dlv
1 -2 dlv
1 -2 dlv
1 0 dlv
1 0 dlv
1 0 dlv
1 2 dlv
1 2 dlv
0 1 dlv
-1 3 dlv
-1 1 dlv
-1 1 dlv
-1 0 dlv
dle
-7 -10 383 567 dls
629 557 dlt
0 10 dlv
4 -10 dlv
4 10 dlv
0 -10 dlv
dle
640 567 dlt
7 0 dlv
-5 -10 dlv
dle
921 557 dlt
0 10 dlv
3 -10 dlv
4 10 dlv
0 -10 dlv
dle
937 567 dlt
-5 0 dlv
0 -5 dlv
0 1 dlv
2 0 dlv
1 0 dlv
1 0 dlv
1 -1 dlv
1 -1 dlv
0 -1 dlv
-1 -2 dlv
-1 -1 dlv
-1 0 dlv
-1 0 dlv
-2 0 dlv
0 1 dlv
-1 1 dlv
dle
1317 557 dlt
0 10 dlv
4 0 dlv
2 -1 dlv
1 -1 dlv
0 -1 dlv
-1 -1 dlv
0 -1 dlv
-2 0 dlv
-4 0 dlv
dle
4 -5 1320 562 dls
1327 564 dlt
0 1 dlv
0 1 dlv
1 0 dlv
1 1 dlv
2 0 dlv
1 -1 dlv
1 -1 dlv
0 -1 dlv
-1 -1 dlv
-1 -1 dlv
-5 -5 dlv
7 0 dlv
dle
358 728 dlt
0 10 dlv
3 -10 dlv
4 10 dlv
0 -10 dlv
dle
370 736 dlt
1 1 dlv
1 1 dlv
0 -10 dlv
dle
378 736 dlt
1 1 dlv
1 1 dlv
0 -10 dlv
dle
629 728 dlt
0 10 dlv
4 -10 dlv
4 10 dlv
0 -10 dlv
dle
646 737 dlt
0 1 dlv
-2 0 dlv
-1 0 dlv
-1 0 dlv
-1 -2 dlv
-1 -2 dlv
0 -3 dlv
1 -1 dlv
1 -1 dlv
1 -1 dlv
1 0 dlv
1 1 dlv
1 1 dlv
1 1 dlv
-1 2 dlv
-1 1 dlv
-1 0 dlv
-1 0 dlv
-1 0 dlv
-1 -1 dlv
-1 -2 dlv
dle
921 728 dlt
0 10 dlv
3 -10 dlv
4 10 dlv
0 -10 dlv
dle
938 731 dlt
-7 0 dlv
5 7 dlv
0 -10 dlv
dle
1317 753 dlt
0 9 dlv
4 0 dlv
2 0 dlv
1 -1 dlv
0 -1 dlv
-1 -1 dlv
0 -1 dlv
-2 0 dlv
-4 0 dlv
dle
4 -5 1320 758 dls
1328 761 dlt
1 0 dlv
1 1 dlv
0 -9 dlv
dle
919 898 dlt
0 10 dlv
4 -10 dlv
4 10 dlv
0 -10 dlv
dle
931 906 dlt
1 1 dlv
2 1 dlv
0 -10 dlv
dle
630 898 dlt
0 10 dlv
4 -10 dlv
4 10 dlv
0 -10 dlv
dle
642 908 dlt
5 0 dlv
-3 -4 dlv
2 0 dlv
1 0 dlv
0 -1 dlv
1 -1 dlv
0 -1 dlv
-1 -1 dlv
-1 -1 dlv
-1 -1 dlv
-1 0 dlv
-2 1 dlv
-1 1 dlv
dle
235 900 dlt
0 9 dlv
4 -9 dlv
4 9 dlv
0 -9 dlv
dle
252 906 dlt
-1 -1 dlv
0 -1 dlv
-2 -1 dlv
-2 1 dlv
-1 1 dlv
0 1 dlv
0 1 dlv
0 1 dlv
1 1 dlv
2 0 dlv
2 0 dlv
0 -1 dlv
1 -2 dlv
0 -2 dlv
-1 -3 dlv
0 -1 dlv
-2 0 dlv
-1 0 dlv
-1 0 dlv
-1 1 dlv
dle
433 900 dlt
0 9 dlv
4 -9 dlv
4 9 dlv
0 -9 dlv
dle
446 909 dlt
-1 0 dlv
0 -1 dlv
0 -1 dlv
0 -1 dlv
1 0 dlv
2 -1 dlv
1 0 dlv
1 -1 dlv
1 -1 dlv
0 -2 dlv
-1 -1 dlv
-2 0 dlv
-2 0 dlv
-1 0 dlv
-1 1 dlv
0 2 dlv
1 1 dlv
1 1 dlv
1 0 dlv
2 1 dlv
1 0 dlv
0 1 dlv
0 1 dlv
0 1 dlv
-2 0 dlv
-2 0 dlv
dle
1311 947 dlt
0 10 dlv
4 -10 dlv
3 10 dlv
0 -10 dlv
dle
1323 955 dlt
1 1 dlv
1 1 dlv
0 -10 dlv
dle
1330 955 dlt
1 1 dlv
0 1 dlv
1 0 dlv
2 0 dlv
1 0 dlv
0 -1 dlv
1 -1 dlv
0 -1 dlv
-1 -1 dlv
-1 -1 dlv
-4 -5 dlv
6 0 dlv
dle
1115 1070 dlt
0 9 dlv
4 -9 dlv
4 9 dlv
0 -9 dlv
dle
1127 1078 dlt
1 0 dlv
2 1 dlv
0 -9 dlv
dle
1135 1079 dlt
5 0 dlv
-3 -3 dlv
1 0 dlv
1 -1 dlv
1 0 dlv
0 -2 dlv
0 -1 dlv
0 -1 dlv
-1 -1 dlv
-1 0 dlv
-2 0 dlv
-1 0 dlv
-1 1 dlv
0 1 dlv
dle
919 1070 dlt
0 9 dlv
4 -9 dlv
4 9 dlv
0 -9 dlv
dle
933 1079 dlt
-2 0 dlv
0 -1 dlv
-1 -3 dlv
0 -1 dlv
1 -2 dlv
0 -2 dlv
2 0 dlv
1 0 dlv
1 0 dlv
1 2 dlv
1 2 dlv
0 1 dlv
-1 3 dlv
-1 1 dlv
-1 0 dlv
-1 0 dlv
dle
-7 -9 937 1079 dls
630 1070 dlt
0 9 dlv
4 -9 dlv
4 9 dlv
0 -9 dlv
dle
642 1077 dlt
0 1 dlv
0 1 dlv
1 0 dlv
1 0 dlv
1 0 dlv
1 0 dlv
1 0 dlv
0 -1 dlv
0 -1 dlv
0 -1 dlv
-1 -2 dlv
-5 -4 dlv
7 0 dlv
dle
111 428 dpb
100 439 dpv
85 439 dpv
74 428 dpv
85 417 dpv
100 417 dpv
dpu
74 564 dpb
74 586 dpv
88 586 dpv
99 575 dpv
88 564 dpv
dpu
74 613 dpb
74 635 dpv
88 635 dpv
99 624 dpv
88 613 dpv
dpu
74 760 dpb
74 782 dpv
88 782 dpv
99 771 dpv
88 760 dpv
dpu
1421 784 dpb
1421 807 dpv
1434 807 dpv
1445 796 dpv
1434 784 dpv
dpu
74 931 dpb
74 953 dpv
88 953 dpv
99 942 dpv
88 931 dpv
dpu
111 1089 dpb
100 1100 dpv
85 1100 dpv
74 1089 dpv
85 1078 dpv
100 1078 dpv
dpu
0 397 1500 1102 clwin
gfs
%%Trailer
%%EOF
