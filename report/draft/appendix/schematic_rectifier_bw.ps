%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 103 360 257
%%Creator: Cadence Design Systems
%%EndComments
%%BeginProlog
%%DocumentFonts:Courier
%******************************************************************************
%
% The preview image should preceed this file if a preview is being generated.
%
% This should be the first line: %!PS-Adobe-2.0 EPSF-1.2
% There should also be a BBox:   %%BoundingBox:0 0 300 300
%
% Cadence Design Systems -- Supports Both Level 1 and Level 2 Printers
%
% EPS Prologue -- Version 97B (aka 9702)
%
/setpacking where
{
	/currpack currentpacking def
	pop true setpacking
} if
%******************************************************************************
/gis  {
  0 setgray
  mark
  save
  newpath

  72 resolution div
  dup
  scale

  /stippleArray 10 array def
    stippleArray
     dup    0  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    1  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    2  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    3  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    4  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    5  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    6  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    7  <00000000000000000000000000000000
                00000000000000000000000000000000> put
     dup    8  <08080404020201018080404020201010
	        08080404020201018080404020201010> put
	    9  <08081414222241418080414122221414
		08081414222241418080414122221414> put



  /newFont 10 dict def
  newFont begin

    /FontType 3 def
    /FontMatrix [1 0 0 1 0 0] def
     /FontBBox [0 0 1 1] def

    /Encoding 256 array def
    0 1 255 {Encoding exch /.notdef put} for
    Encoding
      dup 48 /0  put
      dup 49 /1  put
      dup 50 /2  put
      dup 51 /3  put
      dup 52 /4  put
      dup 53 /5  put
      dup 54 /6  put
      dup 55 /7  put
      dup 56 /8  put
          57 /9  put

    /BuildChar {
        /char exch def
        /fontdict exch def
	/charname fontdict /Encoding get char get def

         1 0 setcharwidth

          16 16 true
          [16 0 0 -16 -.5 15.50]
           stippleArray char 48 sub 1 getinterval cvx
          imagemask
    } def

  end
  /StippleFont newFont definefont 66 scalefont setfont
  /fillChar 0 def

  /ellipsedict 8 dict def
  ellipsedict /mtrx matrix put

  /xformdict 6 dict def
  xformdict /xformmtrx matrix put

  /rt 0 def
  /color     0 def

  /lineRed   0 def
  /lineGreen 0 def
  /lineBlue  0 def

  /fillRed   0 def
  /fillGreen 0 def
  /fillBlue  0 def

  /hatchSet 0 def

  /rht 0 def
  /rw 0 def
  /ils 1.0 def
  /textalign 1 def

  gsave

  } def

/cdsLevel2 /languagelevel where {pop languagelevel} {1} ifelse 2 ge def

/cdsColor cdsLevel2 not {
                          false
                          /colorimage where {pop pop true} if
                        } {
	                  true
                        } ifelse
def

/gfs  {
    grestore
    showpage
    restore
    cleartomark
  } def
/pap {
    /resolution exch def
    /pageHeight exch def
    /pageWidth exch def

  } bind def
/rotp  {
  /rt 90 def
  grestore
} def
/clwin  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    rt 90 eq
      {
        pageWidth 0 translate
        rt rotate
	/rt 0 def
	gsave
      } if

    grestore
    gsave
    newpath
    x1 y1 moveto
    x2 y1 lineto
    x2 y2 lineto
    x1 y2 lineto
    closepath
    clip
    newpath
} def
/bblineto {
  dup dup   /cury exch def
  miny lt {/miny exch def}
    {dup maxy gt { /maxy exch def }
           {pop } ifelse } ifelse
  dup dup
  minx lt {/minx exch def}
    {dup maxx gt { /maxx exch def }
           { pop } ifelse } ifelse
  cury lineto
} def
/bbmoveto {
  dup dup
  /miny exch def /maxy exch def /cury exch def
  dup dup
  /minx exch def /maxx exch def
  cury moveto
} def
/ellipse
  { ellipsedict begin
    /endangle exch def
    /startangle exch def
    /yrad exch def
    /xrad exch def
    /y exch def
    /x exch def

    /savematrix mtrx currentmatrix def
    x y translate
    xrad yrad scale
    0 0 1 startangle endangle arc
    savematrix setmatrix
    end
  } def
/dls  {
  gsave
  newpath
  moveto
  rlineto
  setLineColor
  stroke
  grestore
} def
/dlt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dslt  {
  newpath
  gsave
  setLineColor
  moveto
} def
/dlv  {
  rlineto
} def
/dle  {
  stroke
  grestore
} def
/mps {
  newpath
  moveto
} def
/dbu  {
    setLineColor
    newpath
    moveto
    dup 0 rlineto
    0 3 -1 roll
    rlineto
    neg 0 rlineto
    closepath
    stroke
  } def
/dbf  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
    gsave
      newpath
      x1 y1 bbmoveto
      x2 y1 bblineto
      x2 y2 bblineto
      x1 y2 bblineto
      closepath
      clip fillpath
    grestore
  } def

/dbs  {
    /y2 exch def
    /x2 exch def
    /y1 exch def
    /x1 exch def
      newpath
      x1 y1 moveto
      x2 y1 lineto
      x2 y2 lineto
      x1 y2 lineto
      closepath
      gsave
      setFillColor
      fill grestore
      setLineColor stroke

} def
/dpb { gsave
      newpath bbmoveto
} def
/dpu  {
        closepath
        setLineColor
        stroke
      grestore
} def
/dpf  {
       closepath
       clip fillpath
     grestore
} def
/dps  {
       closepath
       setFillColor
       fill grestore
       setLineColor stroke
} def
/dpv  {
    bblineto
} def
/dcu  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setLineColor
      stroke
    grestore
} def
/dcf  {
    /radius exch def
    /y exch def
    /x exch def
    /minx x radius sub def
    /miny y radius sub def
    /maxx x radius add def
    /maxy y radius add def
    gsave
      newpath
      x y radius radius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dcs  {
    /radius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y radius radius 0 360 ellipse
      setFillColor
      fill
    grestore
    setLineColor stroke
  } def
/delu  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    newpath
      x y xradius yradius 0 360 ellipse
      gsave
      setFillColor
      stroke
    grestore
  } def
/delf  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def
    /minx x xradius sub def
    /miny y yradius sub def
    /maxx x xradius add def
    /maxy y yradius add def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      clip fillpath
    grestore
  } def
/dels  {
    /yradius exch def
    /xradius exch def
    /y exch def
    /x exch def

    gsave
      newpath
      x y xradius yradius 0 360 ellipse
      setFillColor fill
    grestore
    setLineColor stroke
} def
/dau  { gsave
          newpath ellipse
          setLineColor
          stroke
        grestore
} def
/setlinedash {
    1 index length 11 gt
    {exch dup length 11 sub 11 getinterval exch } if
    setdash
} def

/lpb    {
    pop
    [
    /offset 0 def
    /offcount 0 def
    /oncount 0 def
} def

/lpon  {
    /oncount exch def
    pop
    oncount
} def

/lpoff  {
    /offcount exch def
    pop
    oncount 0 eq
    {/offset offcount def }
    { offcount } ifelse
} def

/lpe  {
    /linewidth exch def
    pop
    offset 0 ne
    { offset } if ] 0 setlinedash
    linewidth setlinewidth
} def

/sls    { pop } def

/ssls  { [] 0 setdash
          1 setlinewidth
} def
/fillpath  {
    setFillColor
    /str 1 string def
    /minx minx 66 div
    truncate 66 mul def
    /miny miny 66 div
    truncate 66 mul def

          /fillLine maxx minx sub cvi 66 idiv 1 add string def

          0 1 fillLine length 1 sub {
            fillLine exch fillChar str cvs cvi 48 add put
          } for

          minx
          miny 66 maxy
            { exch dup 3 -1 roll moveto fillLine show
          } for pop
    hatchSet 1 eq {setLineColor stroke} if
} def

/fds  { pop /currchar 30 def} def
/fdf   {
    exch
    /char exch def
    /stipple stippleArray char get def
    stipple exch currchar
    exch putinterval
    stippleArray char stipple put
    /currchar currchar 2 sub def
  } def
/fde  {
    pop
  } def
/sfp  {
    /fillChar exch def
    /hatchSet 0 def
    fillChar 8 ge {/hatchSet 1 def} if
    /StippleFont findfont 66 scalefont setfont
  } def

  /setLineColor {
    cdsLevel2 cdsColor or {
      lineRed    1000 div
      lineGreen  1000 div
      lineBlue   1000 div
      setrgbcolor } if
  } def

  /setFillColor {
    cdsLevel2 cdsColor or {
      fillRed    1000 div
      fillGreen  1000 div
      fillBlue   1000 div
      setrgbcolor }
      { 0 setgray } ifelse
  } def

  /slc {
    /lineBlue  exch def
    /lineGreen exch def
    /lineRed   exch def
    /color 1 def
    lineBlue 1000 eq {lineGreen 1000 eq {lineRed 1000 eq {
      /lineBlue  0 def
      /lineGreen 0 def
      /lineRed   0 def
    } if} if} if
  } def

  /sfc {
    /fillBlue  exch def
    /fillGreen exch def
    /fillRed   exch def
    /color 1 def
    fillBlue 1000 eq {fillGreen 1000 eq {fillRed 1000 eq {
      /fillBlue  0 def
      /fillGreen 0 def
      /fillRed   0 def
    } if} if} if
  } def

%******************************************************************************
% Resident Font Scale Sequence
%    x y rfss
%
/rfss  {
    4 2 roll
    dup
    3 div
    add
    scalefont
    setfont
    0 color ne {setLineColor}
               { 0 setgray } ifelse
  } bind def
%******************************************************************************
% Resident Font End
%
%
/rfe
{
/width exch def
5 1 roll
moveto

xformdict begin
/savematrix xformmtrx currentmatrix def

exch 				% rotate mirror to mirror rotate
matrix rotate concat		% add rotation to current transform matrix
dup 1 eq
	{pop 1 -1}		% X mirror

	{2 eq
		{-1 1}		% Y mirror
		{1 1}		% No mirror
	ifelse}
ifelse matrix scale concat	% add mirror to current transform matrix


dup				% duplicate (string)
length				% replace one of the strings with its length
dup 0 ne
{
	3 -1 roll		% move fixed width flag to top of stack
	0 eq
	{			% if flag is false (0) do old string handling
		/numChr exch def
		dup stringwidth	%stack  wy,wx,(string)
		pop
		width
		exch sub	%stack  xdiff,ydiff,(string)

		cvi
		numChr idiv	%stack  xspace,ydiff,(string)

		/xoff exch def

		{		% this is the positioning  function for kshow
			pop pop
			xoff
			0
			rmoveto
		}

		exch
		kshow
	}

	{			% if flag is true (not 0) just show string
		pop show
	}
	ifelse
}

{
	pop pop pop
}
ifelse
      savematrix setmatrix
    end
  } bind def
%******************************************************************************
% Resident Font Text Alignment
%
/rfta {						% <align> rfta
	/textalign exch def
} bind def
%******************************************************************************
% Resident Font Interline Space
%
/rfis {						% <space> rfis
	/ils exch def
} bind def
%******************************************************************************
% Resident Font Scale
%
/rfsc {						% <ht> <rotate> <mirror> rfs
% What I need to do here is to validate <ht>.  <ht> can not be 0.  If it is 0
% then make it 1.  To do this I will need to use the roll operation and exch
% and maybe dup.  The algorithm looks like this:
% Roll stack to make it look like : <rotate> <mirror> <ht>
% duplicate <ht> so I can test it.
% If <ht> is equal to 0 then
% exchange 1 for <ht>
% In any case roll stack to make it look like: <ht> <rotate> <mirror>
% qed.
%
	3 -1 roll		% <rotate> <mirror> <ht>
	dup 0 eq
	{
		1 exch pop	% <rotate> <mirror> <ht=1>
	}
	if
	3 1 roll		% <ht> <rotate> <mirror>

	0 color ne
	{
		setLineColor
	}
	{
		0 setgray
	}
	ifelse

	/tasz 60 def
	/taln 59 def

	/ta tasz array def
	/cta ta def
	/tc 0 def
	/sa tasz array def
	/sc 0 def
} bind def
%******************************************************************************
% Resident Font Restricted Text
%
/rfrt {						% <height> <width> rfrt
	/rht exch def
	/rw exch def
	% Since restricting one dimension and not the other is not supported
	% if one dimension is turned off then ensure that both dimensions
	% are turned off (a value of 0 means no restriction)
	rht 0 eq rw 0 eq or
	{
		/rht 0 def
		/rw 0 def
	}
	if
} bind def
%******************************************************************************
% Resident Font Text Score
%
/rfts {						% <score> <start> <end> rfts
	sc tasz lt
	{
		3 -1 roll 3 array astore
		sa sc 3 -1 roll put
		/sc sc 1 add def
	}
	{
		pop pop pop
	} ifelse
} bind def
%******************************************************************************
% Resident Font Text
%
/rft {						% (text) rft
	tc taln gt tc tasz mod 0 eq and
	{
		cta /cta tasz array dup def put
	} if

	tc tasz mod exch cta 3 1 roll sc
	sa dup length array copy
	3 array astore put

	/sc 0 def
	/tc tc 1 add def
} bind def
%******************************************************************************
% Resident Font Complete
%
/rfc {						% <x> <y> rfc
	/cta ta def

	%
	% If text is restricted or if text alignment is not left, find the
	% longest text string
	%
	/mw 0 def
	rw 0 ne textalign 3 gt or
	{
		%
		% Find the widest text string
		%
		5 index		% <fn> <ht> <rot> <mir> <x> <y> <fn>
		setfont
		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			tasz mod cta exch get 0 get
			stringwidth pop dup mw gt
			{
				/mw exch def null
			}
			if

			pop
		}
		for

		/cta ta def
	}
	if

	%
	% Operand stack:		<fn> <ht> <rot> <mir> <x> <y>
	% Check for restricted text
	%
	rw 0 ne
	{

		%
		% Compute font scale factors
		%
		6 -2 roll pop		% <rot> <mir> <x> <y> <fn>
		rw mw div
		rht tc div dup ils mul 0.5 add cvi /tht exch def
		matrix scale makefont	% <rot> <mir> <x> <y> <fn>
		/mw rw def
	}
	{
		6 -2 roll		% <rot> <mir> <x> <y> <fn> <ht>
		dup 0 eq		% Test if height is 0
		{			% change to 1 if it is
                	1 exch pop	% <rot> <mir> <x> <y> <fn> <1>
		}
		if
		dup ils mul 0.5 add cvi /tht exch def
		dup mw mul /mw exch def scalefont
	}
	ifelse

	setfont				% <rot> <mir> <x> <y>

	moveto			% <rot> <mir>

	xformdict begin
		/savematrix xformmtrx currentmatrix def

		exch matrix rotate concat
		dup 1 eq
		{
			pop 1.0 -1.0		% x mirror
		}
		{
			2 eq
			{
				-1.0 1.0	% y mirror
			}
			{
				1.0 1.0		% no mirror
			}
			ifelse
		}
		ifelse
		matrix scale concat

		currentpoint

		%
		% Adjust origin for text alignment. For lc (4), cc (5), and uc
		% (6) move left by width / 2. For lr (7), cr (8), and ur (9)
		% move left by width. For cl (2), cc (5), and cr (8) move down
		% by height / 2. For ul (3), uc (6), and ur (9) move down by
		% height.
		%
		textalign 2 eq textalign 5 eq or textalign 8 eq or
		{
			tht tc mul 2 div sub
		} if
		textalign 3 eq textalign 6 eq or textalign 9 eq or
		{
			tht tc mul sub
		} if
		/oy exch def

		textalign 3 gt textalign 7 lt and
		{
			mw 2 div sub
		} if
		textalign 6 gt textalign 10 lt and
		{
			mw sub
		} if
		/ox exch def

		0 1 tc 1 sub
		{
			dup taln gt 1 index tasz mod 0 eq and
			{
				/cta cta tasz get def
			}
			if

			cta exch tasz mod get aload pop
			dup 3 -1 roll	% (str) [score] [score] <cnt>
			0 1 3 -1 roll 1 sub	% (str) [score] [score] 0 1 <cnt>
			{
				newpath ox oy moveto
				get aload pop pop exch	% ... <len> <start>
				dup 0 exch		% ... <len> <start> 0 <s
				5 index 3 1 roll	% ... (str) 0 <start>
				getinterval		% ... <len> <start> (.)
				stringwidth pop tht rmoveto
				3 index			% ... <len> <start> (str)
				3 1 roll exch		% ... (str) <start> <len>
%				dup 3 1 roll
%				sub
				getinterval stringwidth pop
				0 rlineto stroke
				dup
			}
			for
			pop pop
			ox oy moveto
			show

			%
			% Move origin for next line
			%
			/oy oy tht sub def
		}
		for

		savematrix setmatrix
	end
	pop					% throw away the "0"
} bind def
%*****************************
%
% End of Cadence eps.prologue
%
%*****************************
/setpacking where
{
	pop currpack setpacking
} if
%%EndProlog
/#copies 1 def
 1498 1500 300 pap
%%Page: cds 1
gis
0 432 1497 1068 clwin
0 432 1498 1067 clwin
0 432 1498 1067 clwin
0 432 1498 1068 clwin
0 432 1498 1067 clwin
ssls
1039 652 dlt
0 16 dlv
6 0 dlv
3 -1 dlv
0 -1 dlv
1 -1 dlv
0 -2 dlv
-1 -1 dlv
0 -1 dlv
-3 -1 dlv
-6 0 dlv
dle
5 -8 1044 660 dls
1065 664 dlt
-1 2 dlv
-1 1 dlv
-2 1 dlv
-3 0 dlv
-1 -1 dlv
-2 -1 dlv
-1 -2 dlv
0 -2 dlv
0 -4 dlv
0 -2 dlv
1 -2 dlv
2 -1 dlv
1 -1 dlv
3 0 dlv
2 1 dlv
1 1 dlv
1 2 dlv
dle
1080 664 dlt
0 2 dlv
-2 1 dlv
-1 1 dlv
-3 0 dlv
-2 -1 dlv
-1 -1 dlv
-1 -2 dlv
-1 -2 dlv
0 -4 dlv
1 -2 dlv
1 -2 dlv
1 -1 dlv
2 -1 dlv
3 0 dlv
1 1 dlv
2 1 dlv
0 2 dlv
dle
414 652 dlt
0 16 dlv
7 0 dlv
2 -1 dlv
1 -1 dlv
1 -1 dlv
0 -2 dlv
-1 -1 dlv
-1 -1 dlv
-2 -1 dlv
-7 0 dlv
dle
6 -8 419 660 dls
440 664 dlt
0 2 dlv
-2 1 dlv
-1 1 dlv
-3 0 dlv
-2 -1 dlv
-1 -1 dlv
-1 -2 dlv
-1 -2 dlv
0 -4 dlv
1 -2 dlv
1 -2 dlv
1 -1 dlv
2 -1 dlv
3 0 dlv
1 1 dlv
2 1 dlv
0 2 dlv
dle
456 664 dlt
-1 2 dlv
-1 1 dlv
-2 1 dlv
-3 0 dlv
-1 -1 dlv
-2 -1 dlv
-1 -2 dlv
0 -2 dlv
0 -4 dlv
0 -2 dlv
1 -2 dlv
2 -1 dlv
1 -1 dlv
3 0 dlv
2 1 dlv
1 1 dlv
1 2 dlv
dle
23 0 568 597 dls
0 47 591 574 dls
0 47 599 574 dls
599 574 dlt
31 0 dlv
0 -24 dlv
dle
31 0 599 597 dls
599 621 dlt
31 0 dlv
0 23 dlv
dle
615 582 dlt
15 -8 dlv
-15 -8 dlv
dle
-24 0 928 597 dls
0 47 904 574 dls
0 47 896 574 dls
896 574 dlt
-31 0 dlv
0 -24 dlv
dle
-31 0 896 597 dls
896 621 dlt
-31 0 dlv
0 23 dlv
dle
881 582 dlt
-16 -8 dlv
16 -8 dlv
dle
-62 0 1303 550 dls
-62 0 1303 582 dls
-63 0 1053 597 dls
-62 0 1303 613 dls
-62 0 1303 644 dls
1241 676 dlt
0 -157 dlv
-63 0 dlv
-125 78 dlv
125 79 dlv
63 0 dlv
dle
0 157 1178 519 dls
63 0 192 550 dls
63 0 192 582 dls
63 0 442 597 dls
63 0 192 613 dls
63 0 192 644 dls
255 676 dlt
0 -157 dlv
62 0 dlv
125 78 dlv
-125 79 dlv
-62 0 dlv
dle
0 157 317 519 dls
-11 0 928 973 dls
917 973 dpb
914 978 dpv
907 978 dpv
904 973 dpv
907 968 dpv
914 968 dpv
dpu
0 47 904 950 dls
0 47 896 950 dls
870 1004 dlt
15 -7 dlv
-15 -8 dlv
dle
-31 0 896 973 dls
896 997 dlt
-31 0 dlv
0 23 dlv
dle
896 950 dlt
-31 0 dlv
0 -24 dlv
dle
11 0 568 973 dls
591 973 dpb
588 978 dpv
582 978 dpv
579 973 dpv
582 968 dpv
588 968 dpv
dpu
0 47 591 950 dls
0 47 599 950 dls
626 1004 dlt
-16 -7 dlv
16 -8 dlv
dle
31 0 599 973 dls
599 997 dlt
31 0 dlv
0 23 dlv
dle
599 950 dlt
31 0 dlv
0 -24 dlv
dle
0 -11 1123 603 dls
1123 598 dlt
1 2 dlv
1 2 dlv
2 1 dlv
2 0 dlv
dle
1141 600 dlt
-1 2 dlv
-2 1 dlv
-2 0 dlv
-2 -1 dlv
-1 -2 dlv
-1 -2 dlv
0 -1 dlv
1 -3 dlv
1 -1 dlv
2 -1 dlv
2 0 dlv
2 1 dlv
1 1 dlv
dle
1155 600 dlt
-2 2 dlv
-1 1 dlv
-3 0 dlv
-1 -1 dlv
-2 -2 dlv
0 -2 dlv
0 -1 dlv
0 -3 dlv
2 -1 dlv
1 -1 dlv
3 0 dlv
1 1 dlv
2 1 dlv
dle
0 -11 341 603 dls
341 598 dlt
0 2 dlv
2 2 dlv
1 1 dlv
3 0 dlv
dle
358 600 dlt
-1 2 dlv
-2 1 dlv
-2 0 dlv
-1 -1 dlv
-2 -2 dlv
0 -2 dlv
0 -1 dlv
0 -3 dlv
2 -1 dlv
1 -1 dlv
2 0 dlv
2 1 dlv
1 1 dlv
dle
372 600 dlt
-2 2 dlv
-1 1 dlv
-2 0 dlv
-2 -1 dlv
-1 -2 dlv
-1 -2 dlv
0 -1 dlv
1 -3 dlv
1 -1 dlv
2 -1 dlv
2 0 dlv
1 1 dlv
2 1 dlv
dle
94 0 67 472 dls
0 469 161 582 dls
0 78 161 472 dls
169 472 dpb
165 478 dpv
159 480 dpv
153 475 dpv
153 469 dpv
159 464 dpv
165 466 dpv
dps
78 0 98 754 dls
0 141 176 613 dls
184 754 dpb
181 760 dpv
175 762 dpv
169 757 dpv
169 751 dpv
175 746 dpv
181 748 dpv
dps
31 0 161 550 dls
31 0 161 582 dls
16 0 176 613 dls
0 79 192 644 dls
251 0 98 879 dls
0 94 349 879 dls
356 879 dpb
353 885 dpv
347 887 dpv
341 882 dpv
341 876 dpv
347 871 dpv
353 873 dpv
dps
376 0 192 723 dls
219 0 349 879 dls
219 0 349 973 dls
63 0 505 597 dls
0 156 568 723 dls
576 723 dpb
572 729 dpv
566 730 dpv
560 726 dpv
560 720 dpv
566 715 dpv
572 716 dpv
dps
469 0 161 472 dls
469 0 161 1051 dls
454 0 176 754 dls
62 0 568 723 dls
0 172 630 754 dls
0 78 630 472 dls
0 79 630 644 dls
0 47 630 973 dls
0 47 630 550 dls
0 31 630 1020 dls
638 1051 dpb
635 1058 dpv
629 1059 dpv
622 1054 dpv
622 1048 dpv
629 1044 dpv
635 1045 dpv
dps
638 472 dpb
635 478 dpv
629 480 dpv
622 475 dpv
622 469 dpv
629 464 dpv
635 466 dpv
dps
235 0 630 1051 dls
235 0 630 472 dls
0 110 865 644 dls
0 78 865 472 dls
0 47 865 973 dls
0 47 865 550 dls
0 47 865 879 dls
0 31 865 1020 dls
873 1051 dpb
870 1058 dpv
864 1059 dpv
857 1054 dpv
857 1048 dpv
864 1044 dpv
870 1045 dpv
dps
873 472 dpb
870 478 dpv
864 480 dpv
857 475 dpv
857 469 dpv
864 464 dpv
870 466 dpv
dps
62 0 928 597 dls
266 0 865 754 dls
203 0 928 973 dls
0 219 1131 754 dls
1139 754 dpb
1136 760 dpv
1130 762 dpv
1123 757 dpv
1123 751 dpv
1130 746 dpv
1136 748 dpv
dps
172 0 1131 754 dls
0 110 1303 644 dls
1311 754 dpb
1308 760 dpv
1302 762 dpv
1296 757 dpv
1296 751 dpv
1302 746 dpv
1308 748 dpv
dps
454 0 865 879 dls
16 0 1303 613 dls
0 266 1319 613 dls
1327 879 dpb
1324 885 dpv
1317 887 dpv
1311 882 dpv
1311 876 dpv
1317 871 dpv
1324 873 dpv
dps
470 0 865 1051 dls
470 0 865 472 dls
32 0 1303 550 dls
32 0 1303 582 dls
0 469 1335 582 dls
0 78 1335 472 dls
1343 1051 dpb
1339 1058 dpv
1333 1059 dpv
1327 1054 dpv
1327 1048 dpv
1333 1044 dpv
1339 1045 dpv
dps
94 0 1303 754 dls
78 0 1319 879 dls
62 0 1335 1051 dls
114 472 dpb
100 458 dpv
81 458 dpv
67 472 dpv
81 486 dpv
100 486 dpv
dps
561 591 574 604 dbs
624 638 637 651 dbs
624 591 637 604 dbs
624 544 637 557 dbs
921 591 934 604 dbs
859 638 871 651 dbs
859 591 871 604 dbs
859 544 871 557 dbs
1297 544 1310 557 dbs
1297 638 1310 651 dbs
1297 607 1310 619 dbs
1297 576 1310 588 dbs
984 591 997 604 dbs
186 544 198 557 dbs
186 638 198 651 dbs
186 607 198 619 dbs
186 576 198 588 dbs
499 591 511 604 dbs
67 740 dpb
67 768 dpv
84 768 dpv
98 754 dpv
84 740 dpv
dps
1429 768 dpb
1429 740 dpv
1411 740 dpv
1397 754 dpv
1411 768 dpv
dps
67 865 dpb
67 893 dpv
84 893 dpv
98 879 dpv
84 865 dpv
dps
1429 893 dpb
1429 865 dpv
1411 865 dpv
1397 879 dpv
1411 893 dpv
dps
921 967 934 979 dbs
859 920 871 932 dbs
859 967 871 979 dbs
859 1014 871 1026 dbs
561 967 574 979 dbs
624 920 637 932 dbs
624 967 637 979 dbs
624 1014 637 1026 dbs
1397 1037 dpb
1397 1065 dpv
1415 1065 dpv
1429 1051 dpv
1415 1037 dpv
dps
24 476 dlt
-1 2 dlv
-1 1 dlv
-2 1 dlv
-3 0 dlv
-1 -1 dlv
-2 -1 dlv
-1 -2 dlv
0 -2 dlv
0 -4 dlv
0 -2 dlv
1 -1 dlv
2 -2 dlv
1 -1 dlv
3 0 dlv
2 1 dlv
1 2 dlv
1 1 dlv
0 2 dlv
-4 0 dlv
dle
29 464 dlt
0 16 dlv
11 -16 dlv
0 16 dlv
dle
45 464 dlt
0 16 dlv
6 0 dlv
2 -1 dlv
1 -1 dlv
1 -2 dlv
1 -2 dlv
0 -4 dlv
-1 -2 dlv
-1 -1 dlv
-1 -2 dlv
-2 -1 dlv
-6 0 dlv
dle
1445 762 dlt
6 -16 dlv
6 16 dlv
dle
3 0 1459 762 dls
0 -16 1461 762 dls
3 0 1459 746 dls
1467 746 dlt
0 16 dlv
10 -16 dlv
0 16 dlv
dle
1483 758 dlt
0 1 dlv
1 1 dlv
1 1 dlv
1 1 dlv
3 0 dlv
1 -1 dlv
1 -1 dlv
1 -1 dlv
0 -2 dlv
-1 -1 dlv
-1 -2 dlv
-8 -8 dlv
11 0 dlv
dle
0 762 dlt
6 -16 dlv
6 16 dlv
dle
3 0 14 762 dls
0 -16 16 762 dls
3 0 14 746 dls
22 746 dlt
0 16 dlv
10 -16 dlv
0 16 dlv
dle
38 758 dlt
0 1 dlv
1 1 dlv
1 1 dlv
1 1 dlv
3 0 dlv
2 -1 dlv
0 -1 dlv
1 -1 dlv
0 -2 dlv
-1 -1 dlv
-1 -2 dlv
-7 -8 dlv
10 0 dlv
dle
1445 887 dlt
6 -16 dlv
6 16 dlv
dle
3 0 1459 887 dls
0 -16 1461 887 dls
3 0 1459 871 dls
1467 871 dlt
0 16 dlv
10 -16 dlv
0 16 dlv
dle
1485 884 dlt
1 1 dlv
2 2 dlv
0 -16 dlv
dle
2 887 dlt
6 -16 dlv
6 16 dlv
dle
3 0 16 887 dls
0 -16 17 887 dls
3 0 16 871 dls
23 871 dlt
0 16 dlv
11 -16 dlv
0 16 dlv
dle
41 884 dlt
2 1 dlv
2 2 dlv
0 -16 dlv
dle
1437 1059 dlt
6 -15 dlv
6 15 dlv
dle
1453 1044 dlt
0 15 dlv
7 0 dlv
2 -1 dlv
1 0 dlv
0 -2 dlv
0 -1 dlv
0 -2 dlv
-1 -1 dlv
-2 0 dlv
-7 0 dlv
dle
5 -8 1458 1052 dls
1478 1059 dlt
-9 0 dlv
0 -15 dlv
9 0 dlv
dle
5 0 1469 1052 dls
1493 1055 dlt
-1 2 dlv
-1 1 dlv
-2 1 dlv
-3 0 dlv
-1 -1 dlv
-2 -1 dlv
0 -2 dlv
-1 -2 dlv
0 -4 dlv
1 -2 dlv
0 -1 dlv
2 -2 dlv
1 0 dlv
3 0 dlv
2 0 dlv
1 2 dlv
1 1 dlv
dle
1196 555 dlt
0 1 dlv
-2 2 dlv
-1 0 dlv
-3 0 dlv
-2 0 dlv
-1 -2 dlv
-1 -1 dlv
-1 -3 dlv
0 -3 dlv
1 -3 dlv
1 -1 dlv
1 -2 dlv
2 0 dlv
3 0 dlv
1 0 dlv
2 2 dlv
0 1 dlv
0 3 dlv
-3 0 dlv
dle
1202 543 dlt
0 15 dlv
10 -15 dlv
0 15 dlv
dle
1218 543 dlt
0 15 dlv
5 0 dlv
2 0 dlv
2 -2 dlv
1 -1 dlv
0 -3 dlv
0 -3 dlv
0 -3 dlv
-1 -1 dlv
-2 -2 dlv
-2 0 dlv
-5 0 dlv
dle
1171 590 dlt
6 -16 dlv
6 16 dlv
dle
1187 574 dlt
0 16 dlv
6 0 dlv
3 -1 dlv
0 -1 dlv
1 -1 dlv
0 -2 dlv
-1 -1 dlv
0 -1 dlv
-3 -1 dlv
-6 0 dlv
dle
5 -8 1192 582 dls
1212 590 dlt
-10 0 dlv
0 -16 dlv
10 0 dlv
dle
6 0 1202 582 dls
1227 586 dlt
-1 1 dlv
-1 2 dlv
-2 1 dlv
-3 0 dlv
-1 -1 dlv
-2 -2 dlv
0 -1 dlv
-1 -2 dlv
0 -4 dlv
1 -2 dlv
0 -2 dlv
2 -1 dlv
1 -1 dlv
3 0 dlv
2 1 dlv
1 1 dlv
1 2 dlv
dle
1063 605 dlt
6 -15 dlv
6 15 dlv
dle
1082 605 dlt
-1 0 dlv
-2 -2 dlv
0 -1 dlv
-1 -3 dlv
0 -3 dlv
1 -3 dlv
0 -1 dlv
2 -2 dlv
1 0 dlv
3 0 dlv
2 0 dlv
1 2 dlv
1 1 dlv
1 3 dlv
0 3 dlv
-1 3 dlv
-1 1 dlv
-1 2 dlv
-2 0 dlv
-3 0 dlv
dle
1095 590 dlt
0 15 dlv
11 -15 dlv
0 15 dlv
dle
1180 621 dlt
6 -16 dlv
6 16 dlv
dle
3 0 1195 621 dls
0 -16 1196 621 dls
3 0 1195 605 dls
1202 605 dlt
0 16 dlv
11 -16 dlv
0 16 dlv
dle
1219 617 dlt
0 1 dlv
0 1 dlv
1 1 dlv
1 1 dlv
3 0 dlv
2 -1 dlv
1 -1 dlv
0 -1 dlv
0 -2 dlv
0 -1 dlv
-2 -2 dlv
-7 -8 dlv
10 0 dlv
dle
1182 652 dlt
6 -15 dlv
6 15 dlv
dle
3 0 1196 652 dls
0 -15 1198 652 dls
3 0 1196 637 dls
1204 637 dlt
0 15 dlv
10 -15 dlv
0 15 dlv
dle
1222 649 dlt
1 1 dlv
2 2 dlv
0 -15 dlv
dle
277 555 dlt
0 1 dlv
-2 2 dlv
-1 0 dlv
-3 0 dlv
-2 0 dlv
-1 -2 dlv
-1 -1 dlv
-1 -3 dlv
0 -3 dlv
1 -3 dlv
1 -1 dlv
1 -2 dlv
2 0 dlv
3 0 dlv
1 0 dlv
2 2 dlv
0 1 dlv
0 3 dlv
-3 0 dlv
dle
283 543 dlt
0 15 dlv
10 -15 dlv
0 15 dlv
dle
299 543 dlt
0 15 dlv
5 0 dlv
3 0 dlv
1 -2 dlv
1 -1 dlv
1 -3 dlv
0 -3 dlv
-1 -3 dlv
-1 -1 dlv
-1 -2 dlv
-3 0 dlv
-5 0 dlv
dle
265 590 dlt
6 -16 dlv
6 16 dlv
dle
280 574 dlt
0 16 dlv
7 0 dlv
2 -1 dlv
1 -1 dlv
1 -1 dlv
0 -2 dlv
-1 -1 dlv
-1 -1 dlv
-2 -1 dlv
-7 0 dlv
dle
5 -8 286 582 dls
306 590 dlt
-10 0 dlv
0 -16 dlv
10 0 dlv
dle
6 0 296 582 dls
321 586 dlt
-1 1 dlv
-2 2 dlv
-1 1 dlv
-3 0 dlv
-2 -1 dlv
-1 -2 dlv
-1 -1 dlv
0 -2 dlv
0 -4 dlv
0 -2 dlv
1 -2 dlv
1 -1 dlv
2 -1 dlv
3 0 dlv
1 1 dlv
2 1 dlv
1 2 dlv
dle
385 605 dlt
6 -15 dlv
6 15 dlv
dle
405 605 dlt
-2 0 dlv
-1 -2 dlv
-1 -1 dlv
-1 -3 dlv
0 -3 dlv
1 -3 dlv
1 -1 dlv
1 -2 dlv
2 0 dlv
3 0 dlv
1 0 dlv
2 2 dlv
0 1 dlv
1 3 dlv
0 3 dlv
-1 3 dlv
0 1 dlv
-2 2 dlv
-1 0 dlv
-3 0 dlv
dle
417 590 dlt
0 15 dlv
11 -15 dlv
0 15 dlv
dle
265 621 dlt
6 -16 dlv
6 16 dlv
dle
3 0 279 621 dls
0 -16 280 621 dls
3 0 279 605 dls
286 605 dlt
0 16 dlv
11 -16 dlv
0 16 dlv
dle
303 617 dlt
0 1 dlv
1 1 dlv
0 1 dlv
2 1 dlv
3 0 dlv
1 -1 dlv
1 -1 dlv
1 -1 dlv
0 -2 dlv
-1 -1 dlv
-1 -2 dlv
-8 -8 dlv
10 0 dlv
dle
265 652 dlt
6 -15 dlv
6 15 dlv
dle
3 0 279 652 dls
0 -15 280 652 dls
3 0 279 637 dls
286 637 dlt
0 15 dlv
11 -15 dlv
0 15 dlv
dle
304 649 dlt
2 1 dlv
2 2 dlv
0 -15 dlv
dle
648 652 dlt
0 13 dlv
5 -13 dlv
5 13 dlv
0 -13 dlv
dle
663 662 dlt
0 2 dlv
1 0 dlv
1 1 dlv
2 0 dlv
2 -1 dlv
1 -2 dlv
0 -1 dlv
-1 -1 dlv
-1 -2 dlv
-6 -6 dlv
8 0 dlv
dle
824 652 dlt
0 13 dlv
4 -13 dlv
5 13 dlv
0 -13 dlv
dle
846 656 dlt
-9 0 dlv
6 9 dlv
0 -13 dlv
dle
825 1026 dlt
0 13 dlv
5 -13 dlv
5 13 dlv
0 -13 dlv
dle
840 1039 dlt
7 0 dlv
-4 -5 dlv
2 0 dlv
1 -1 dlv
1 0 dlv
0 -2 dlv
0 -1 dlv
0 -2 dlv
-1 -1 dlv
-2 -1 dlv
-2 0 dlv
-2 1 dlv
0 1 dlv
-1 1 dlv
dle
647 1026 dlt
0 13 dlv
5 -13 dlv
4 13 dlv
0 -13 dlv
dle
662 1036 dlt
1 1 dlv
2 2 dlv
0 -13 dlv
dle
114 472 dpb
100 486 dpv
81 486 dpv
67 472 dpv
81 458 dpv
100 458 dpv
dpu
67 740 dpb
67 768 dpv
84 768 dpv
98 754 dpv
84 740 dpv
dpu
1429 768 dpb
1429 740 dpv
1411 740 dpv
1397 754 dpv
1411 768 dpv
dpu
67 865 dpb
67 893 dpv
84 893 dpv
98 879 dpv
84 865 dpv
dpu
1429 893 dpb
1429 865 dpv
1411 865 dpv
1397 879 dpv
1411 893 dpv
dpu
1397 1037 dpb
1397 1065 dpv
1415 1065 dpv
1429 1051 dpv
1415 1037 dpv
dpu
0 432 1498 1068 clwin
gfs
%%Trailer
%%EOF
